name: Build Packages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libsfml-dev \
            cmake \
            build-essential \
            debhelper \
            dh-make \
            fakeroot

      - name: Configure and build
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make -j$(nproc)

      - name: Create DEB package
        run: |
          # Create package structure
          mkdir -p pkg/DEBIAN pkg/usr/games
          cp build/xonix pkg/usr/games/

          # Create control file
          cat > pkg/DEBIAN/control <<EOF
          Package: xonix
          Version: 1.0-0
          Section: games
          Priority: optional
          Architecture: amd64
          Maintainer: Your Name <your.email@example.com>
          Depends: libsfml-system2.5, libsfml-window2.5, libsfml-graphics2.5
          Description: Xonix game
           A classic Xonix game built with SFML.
          EOF

          # Build package
          dpkg-deb --build pkg xonix_1.0-0_amd64.deb

      - name: Upload DEB artifact
        uses: actions/upload-artifact@v4
        with:
          name: xonix-deb-package
          path: xonix_1.0-0_amd64.deb

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
  
    - name: Install CMake
      uses: actions/setup-cmake@v4
      with:
        cmake-version: '3.25.2'

    - name: Download and install SFML
      shell: pwsh
      run: |
        $url = "https://github.com/SFML/SFML/releases/download/2.5.1/SFML-2.5.1-windows-vc15-64-bit.zip"
        $output = "$env:RUNNER_TEMP\SFML-2.5.1.zip"
        
 
        Write-Output "Downloading SFML from $url"
        Invoke-WebRequest -Uri $url -OutFile $output -UserAgent "GitHubActions"
        
    
        if (-not (Test-Path $output)) {
            throw "SFML download failed"
        }

        $sfmlPath = "C:\SFML-2.5.1"
        Expand-Archive -Path $output -DestinationPath $sfmlPath -Force
    
        Write-Output "SFML_DIR=$sfmlPath" | Out-File -FilePath $env:GITHUB_ENV -Append
        Write-Output "CMAKE_PREFIX_PATH=$sfmlPath" | Out-File -FilePath $env:GITHUB_ENV -Append
        Write-Output "PATH=$env:PATH;$sfmlPath\bin" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Build with CMake
      shell: pwsh
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 17 2022" -A x64 ..
        cmake --build . --config Release --target xonix

    - name: Create MSI package
      run: |
        $productGuid = [guid]::NewGuid().ToString().ToUpper()
        $componentGuid = [guid]::NewGuid().ToString().ToUpper()

        @"
        <?xml version="1.0" encoding="UTF-8"?>
        <Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
          <Product Id="*" Name="Xonix" Language="1033" Version="1.0.0.0" Manufacturer="YourCompany" UpgradeCode="$productGuid">
            <Package InstallerVersion="200" Compressed="yes" Comments="Windows Installer Package"/>
            <MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." />
            <MediaTemplate EmbedCab="yes"/>
          
            <Directory Id="TARGETDIR" Name="SourceDir">
              <Directory Id="ProgramFiles64Folder">
                <Directory Id="INSTALLFOLDER" Name="Xonix">
                  <Component Id="ApplicationFiles" Guid="$componentGuid">
                    <File Id="XonixEXE" Name="xonix.exe" Source="build\Release\xonix.exe" KeyPath="yes"/>
                  </Component>
                </Directory>
              </Directory>
            </Directory>
          
            <Feature Id="MainApplication" Title="Main Application" Level="1">
              <ComponentRef Id="ApplicationFiles"/>
            </Feature>
          </Product>
        </Wix>
        "@ | Out-File -FilePath product.wxs -Encoding utf8

        candle.exe -out product.wixobj product.wxs
        light.exe -out xonix.msi product.wixobj

    - name: Upload MSI artifact
      uses: actions/upload-artifact@v4
      with:
        name: xonix-msi-package
        path: xonix.msi
